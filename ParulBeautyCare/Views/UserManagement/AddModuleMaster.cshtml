@model ParulBeautyCareViewModel.ViewModel.ModuleViewModel
@{
    ViewBag.Title = "Module Master";
    ViewBag.Module = "User Management";
}
@{
    ViewBag.Title = @ViewBag.action + " Module Master";
}
<div class="content-wrapper">
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div class="bg-gradient-pinkHeader shadow-primary border-radius-lg pt-3 d-flex justify-content-between row">
                        <h2 class="text-white text-capitalize ps-3 title_margin col-md-6"><b>Module Master</b></h2>

                        @*@if (Convert.ToInt32(TempData["ViewRight"]) == 1)
        {*@
                        @*<a class="btn btn-light btn-icon mb-2 mx-2 title_a" href="@Url.Action("ViewModuleMaster","UserManagement")">
                            <i class="fa-solid fa-list-check mx-2 text-black"></i><b>View</b>
                        </a>*@

                        <a class="dedcription-btn anc col-md-6" href="@Url.Action("ViewModuleMaster","UserManagement")">
                            <span class="name-descripeion"> <b> VIEW RECORDS</b> </span>
                            <div class="btn-icon brain">
                                <i class="fa-solid fa-list-check"> </i>
                            </div>
                        </a>
                        @*}*@

                    </div>
                </div>
                <div class="card-body">
                    @*<div class="row">
                <div class="d-xl-flex justify-content-between align-items-center">
                    <h1 class="pink"><b>@ViewBag.action Module Master </b></h1>
                    <a class="btn btn-sm btn-outline-primary btn-round mb-3" href="@Url.Action("ViewModuleMaster","UserManagement")">
                        <i class="fa fa-eye mx-2 "></i>View
                    </a>
                </div>
            </div>*@
                    @using (Html.BeginForm("AddModuleMaster", "UserManagement", FormMethod.Post, new { @class = "forms-sample" }))
                    {
                        @Html.HiddenFor(m => m.ModuleId)
                        @Html.AntiForgeryToken()
                        <div class="row form-group">
                            <div class="col-sm-3">
                                <label class="col-form-label">
                                    Module Name
                                    @Html.ValidationMessageFor(m => m.ModuleName, "", new { @class = "text-danger h3" })
                                </label>
                                @Html.TextBoxFor(m => m.ModuleName, new Dictionary<string, object>() {
                                                                            {"id","txtModuleName"},
                                                                            {"class","form-control text-capitalize"},
                                                                               {"autocomplete","off"},
                                                                            {"required","required"},
                                                                            {"placeholder","Enter Module Name"}
                                                                            })
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">
                                    Module Priority
                                    @Html.ValidationMessageFor(m => m.ModulePriority, "", new { @class = "text-danger h3" })
                                </label>
                                @Html.TextBoxFor(m => m.ModulePriority, new Dictionary<string, object>() {
                                                                  {"id","txtModulePriority"},
                                                                  {"class","form-control numberonly"},
                                                                  { "type","number"},
                                                                     {"autocomplete","off"},
                                                                  {"placeholder","Enter Module Priority"}
                                                                  })
                            </div>

                            <div class="col-sm-3">
                                <label class="col-form-label">
                                    Module Icon
                                    @Html.ValidationMessageFor(m => m.FaIcon, "", new { @class = "text-danger h3" })
                                </label>
                                @Html.TextBoxFor(m => m.FaIcon, new Dictionary<string, object>() {
                                                                  {"id","txtModuleFaIcon"},
                                                                  {"class","form-control"},
                                                                     {"autocomplete","off"},
                                                                  {"placeholder","Enter Module Icon"}
                                                                  })
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">IsActive</label>
                                <div class="input-group input-group-outline mb-3">
                                    @Html.DropDownListFor(x => x.IsActive, new List<SelectListItem>
                                           {
                                               new SelectListItem{ Text="Enable", Value = "true",Selected=true },
                                               new SelectListItem{ Text="Disable", Value = "false" }
                                            }, new { @class = "form-control form-select js-example-basic-single  w-100", @id = "IsActive" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input type="checkbox" name="selfPage" id="selfPage" value="true" class="form-check-input" @(Model.selfPage ? "checked" : "")>
                                        Self Page
                                    </label>
                                </div>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary mr-2 mt-3" onclick="return formSubmit('Are You sure you want to save data?')">Submit</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>









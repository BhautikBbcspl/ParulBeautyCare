@model ParulBeautyCareViewModel.ViewModel.BookingMgmtViewModel.AdvanceBookingViewModel
@{
    ViewBag.Title = "AdvanceBooking";
    ViewBag.Module = "BookingManagement";
}
<style>
    .field-icon {
        float: right;
        margin-top: -30px;
        position: relative;
        right: 15px;
        z-index: 2;
    }
</style>
<div class="content-wrapper" style="overflow: hidden !important">
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div class="bg-gradient-pinkHeader shadow-primary border-radius-lg pt-3 d-flex justify-content-between row">
                        <h2 class="text-white text-capitalize ps-3 title_margin col-md-6"><b>Advance Booking</b></h2>
                        <a class="dedcription-btn anc col-md-6" href="@Url.Action("ViewAdvanceBooking","BookingManagement")">
                            <span class="name-descripeion"> <b> VIEW RECORDS</b> </span>
                            <div class="btn-icon brain">
                                <i class="fa-solid fa-list-check"> </i>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("AddAdvanceBooking", "BookingManagement", FormMethod.Post, new { @class = "forms-sample", autocomplete = "off" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.Action)
                        @Html.HiddenFor(x => x.AdvanceBookingId,new { @id = "txtAdvanceBookingId"})
                    <div class="row form-group">
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                Name
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger h3" })
                            </label>
                            @Html.TextBoxFor(m => m.Name, new Dictionary<string, object>() {
                                                                        {"id","txtName"},
                                                                        {"class","form-control"},
                                                                           {"autocomplete","off"},
                                                                        {"required","required"},
                                                                        {"placeholder","Enter Name"}
                                                                        })
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                Contact No
                                @Html.ValidationMessageFor(m => m.ContactNo, "", new { @class = "text-danger h3" })
                            </label>
                            @Html.TextBoxFor(m => m.ContactNo, new Dictionary<string, object>() {
                                                                        {"id","txtContactNo"},
                                                                        {"class","form-control"},
                                                                           {"autocomplete","off"},
                                                                        {"required","required"},
                                                                        {"placeholder","Enter Contact No"}
                                                                        })
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                Address
                                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger h3" })
                            </label>
                            @Html.TextBoxFor(m => m.Address, new Dictionary<string, object>() {
                                                                        {"id","txtAddress"},
                                                                        {"class","form-control"},
                                                                           {"autocomplete","off"},
                                                                        {"placeholder","Enter Address"}
                                                                        })
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                Person Name
                                @Html.ValidationMessageFor(m => m.SPersonName, "", new { @class = "text-danger h3" })
                            </label>
                            @Html.TextBoxFor(m => m.SPersonName, new Dictionary<string, object>() {
                                                                        {"id","txtSPersonName"},
                                                                        {"class","form-control"},
                                                                           {"autocomplete","off"},
                                                                        {"required","required"},
                                                                        {"placeholder","Enter Person Name"}
                                                                        })
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                Person Contact No
                                @Html.ValidationMessageFor(m => m.SPersonContact, "", new { @class = "text-danger h3" })
                            </label>
                            @Html.TextBoxFor(m => m.SPersonContact, new Dictionary<string, object>() {
                                                                        {"id","txtSPersonContact"},
                                                                        {"class","form-control"},
                                                                           {"autocomplete","off"},
                                                                        {"required","required"},
                                                                        {"placeholder","Enter Person Contact"}
                                                                        })
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                Person Address
                                @Html.ValidationMessageFor(m => m.SPersonAddress, "", new { @class = "text-danger h3" })
                            </label>
                            @Html.TextBoxFor(m => m.SPersonAddress, new Dictionary<string, object>() {
                                                                        {"id","txtSPersonAddress"},
                                                                        {"class","form-control"},
                                                                           {"autocomplete","off"},
                                                                        {"placeholder","Enter Person Address"}
                                                                        })
                        </div>
                        @*<div class="col-sm-12 col-md-4 col-lg-3">
            <label class="col-form-label">
                Department
                @Html.ValidationMessageFor(m => m.DepartmentId, "", new { @class = "text-danger" })
            </label>
            @Html.DropDownListFor(model => model.DepartmentId, new SelectList(Model.DepartmentList, "DepartmentId", "DepartmentName"), "Select Department", new Dictionary<string, object>
                      () {
                      {"id","ddlDepartment"},
                      { "class","js-example-basic-single  w-100"},
                      {"autocomplete","off"},
                      {"required","required"},
                      {"placeholder","Select Department"}
                       })
        </div>*@
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                Siders
                                @Html.ValidationMessageFor(m => m.NumOfSiders, "", new { @class = "text-danger h3" })
                            </label>
                            @Html.HiddenFor(m => m.SidersDeposit, new { id = "txtSidersDeposit" })
                            @Html.HiddenFor(m => m.BridalDeposit, new { id = "txtBridalDeposit" })
                            @Html.TextBoxFor(m => m.NumOfSiders, new Dictionary<string, object>() {
                                                                        {"id","txtNumOfSiders"},
                                                                        {"class","form-control"},
                                                                           {"autocomplete","off"},
                                                                        {"required","required"},
                                                                        {"type","number"},
                                                                        {"placeholder","Enter Siders"},
                                                                       {"inputchange", "updateDeposits(this.value)"},
                                                                       {"min", "0"}
                                                                        })
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                Total Deposit
                                @Html.ValidationMessageFor(m => m.TotalDeposit, "", new { @class = "text-danger h3" })
                            </label>
                            @Html.TextBoxFor(m => m.TotalDeposit, new Dictionary<string, object>() {
                                                                        {"id","txtTotalSidersDeposit"},
                                                                        {"class","form-control"},
                                                                           {"autocomplete","off"},
                                                                        {"required","required"},
                                                                        {"readonly","readonly"}
                                                                        })
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                FunctionDate
                                @Html.ValidationMessageFor(m => m.FunctionDate, "", new { @class = "text-danger h3" })
                            </label>
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.FunctionDate, new Dictionary<string, object>() {
                                                                              {"id","txtFunctionDate"},
                                                                              {"class","form-control"},
                                                                              {"required","required"},
                                                                              {"placeholder","Select Function Date"}
                                                                              })
                                <div class="input-group-append d-flex">
                                    <span class="input-group-text" id="datepickerIcon" style="color: #212529 !important; border: 1px solid #ced4da !important; ">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-4 col-lg-3">


                            <div id="dropdownContainer">
                                <label for="dropdown" class="col-form-label">Select Payment Method</label>
                                <div class="input-group input-group-outline mb-3">
                                    <select id="dropdown" name="PaymentType" class="form-control form-select js-example-basic-single w-100">
                                        <option value="none">Select Payment method</option>
                                        <option value="Cash">Cash</option>
                                        <option value="Cheque">Cheque</option>
                                        <option value="G-pay">G-pay</option>
                                    </select>
                                </div>



                            </div>

                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3" style="display: none;" id="Chequetextbox">

                            <label class="col-form-label">
                                Cheque Number
                                @*@Html.ValidationMessageFor(m => m.ChequeNumber, "", new { @class = "text-danger h3" })*@
                            </label>
                            @Html.TextBoxFor(m => m.ChequeNumber, new Dictionary<string, object>() {
                                {"id","txtCheckNo"},
                                {"class","form-control"},
                                {"autocomplete","off"},
                                {"required","required"},
                                {"placeholder","Enter Cheque Number"}
                            })

                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3" id="Gpaytextbox" style="display: none;">


                            <label class="col-form-label">
                                Gpay No
                                @*@Html.ValidationMessageFor(m => m.GpayNo, "", new { @class = "text-danger h3" })*@
                            </label>
                            @Html.TextBoxFor(m => m.Gpayno, new Dictionary<string, object>() {
                                {"id","txtGpayNo"},
                                {"class","form-control"},
                                {"autocomplete","off"},
                                {"required","required"},
                                {"placeholder","Enter   Gpay No"}
                            })


                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <label class="col-form-label">
                                Remark
                                @Html.ValidationMessageFor(m => m.BeforeRemark, "", new { @class = "text-danger h3" })
                            </label>
                            @Html.TextBoxFor(m => m.BeforeRemark, new Dictionary<string, object>() {
                                                                        {"id","txtBeforeRemark"},
                                                                        {"class","form-control"},
                                                                           {"autocomplete","off"},
                                                                        {"placeholder","Enter Remark"}
                                                                        })
                        </div>
                    </div>
                        <button type="submit" class="btn btn-primary mr-2 mt-3" value="@ViewBag.action" onclick="return formSubmit('Are You sure you want to save data?')">@ViewBag.action</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $("#datepickerIcon").click(function () {
        $("#txtFunctionDate").click();
    });
    $(document).ready(function () {
        // Function to toggle the visibility of text boxes
        function toggleTextBoxes() {
            var selectedPaymentMethod = $("#dropdown").val();

            // Hide all text boxes first
            $("#Chequetextbox, #Gpaytextbox").hide();

            // Show the relevant text box based on the selected payment method
            if (selectedPaymentMethod === "Cheque") {
                $("#Chequetextbox").show();
            } else if (selectedPaymentMethod === "G-pay") {
                $("#Gpaytextbox").show();
            }
        }

        // Initial toggle on page load
        toggleTextBoxes();

        // Bind the toggle function to the change event of the dropdown
        $("#dropdown").change(function () {
            toggleTextBoxes();
        });

        var textInput = $("#txtAdvanceBookingId").val();
        if (textInput != 0 || textInput == null) {
            document.getElementById("txtName").readOnly = true;
            document.getElementById("txtContactNo").readOnly = true;
            document.getElementById("txtAddress").readOnly = true;
        }
        else {
            document.getElementById("txtName").readOnly = false;
            document.getElementById("txtContactNo").readOnly = false;
            document.getElementById("txtAddress").readOnly = false;
        }
        $("#txtFunctionDate").flatpickr({
            dateFormat: "d-m-Y",
            minDate: "today"
        });
     
        // Function to update the TotalSidersDeposit and TotalDeposit fields
        function updateDeposits() {
            debugger
            var sidersDeposit = parseFloat($("#txtSidersDeposit").val()) || 0; // Get the SidersDeposit value
            var numOfSiders = parseInt($("#txtNumOfSiders").val()) || 0; // Get the NumOfSiders value

            var totalSidersDeposit = sidersDeposit * numOfSiders; // Calculate TotalSidersDeposit

            $("#txtTotalSidersDeposit").val(totalSidersDeposit.toFixed(2)); // Update the TotalSidersDeposit field

            // Calculate the TotalDeposit as the sum of BridalDeposit and TotalSidersDeposit
            var bridalDeposit = parseFloat($("#txtBridalDeposit").val()) || 0;
            var totalDeposit = bridalDeposit + totalSidersDeposit;

            $("#txtTotalSidersDeposit").val(totalDeposit.toFixed(0)); // Update the TotalDeposit field
        }

        // Attach the updateDeposits function to the change event of NumOfSiders input
        $("#txtNumOfSiders").on("change", updateDeposits);

        // Call the updateDeposits function initially to set the initial values
        updateDeposits();
    });
</script>



@model ParulBeautyCareViewModel.ViewModel.BookingMgmtViewModel.BookingDetailViewModel
@{
    ViewBag.Title = "Service Completion";
    ViewBag.Module = "Booking Management";
}
<style>
    #DetailTable .form-control {
        display: block;
        width: 100%;
        padding: 0.875rem 1.375rem;
        font-size: 0.875rem;
        font-weight: 400;
        line-height: 1;
        color: #212529;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        appearance: none;
        border-radius: 1px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
    .form-check {
        min-height: 18px;
        display: block;
        margin-left: 1.75rem;
        font-size: 0.875rem;
        line-height: 1.5;
    }

    .form-check-input {
        content: "";
        width: 18px;
        height: 18px;
        border-radius: 2px;
        border: solid #f2125e;
        border-width: 2px;
        -webkit-transition: all;
        -moz-transition: all;
        -ms-transition: all;
        -o-transition: all;
        transition: all;
        transition-duration: 0s;
        -webkit-transition-duration: 250ms;
        transition-duration: 250ms;
    }

        .form-check-input::after {
            -webkit-transition: all;
            -moz-transition: all;
            -ms-transition: all;
            -o-transition: all;
            transition: all;
            transition-duration: 0s;
            -webkit-transition-duration: 250ms;
            transition-duration: 250ms;
            font-family: typicons;
            opacity: 0;
            filter: alpha(opacity=0);
            -webkit-transform: scale(0);
            -ms-transform: scale(0);
            -o-transform: scale(0);
            transform: scale(0);
            content: '\e11e';
            font-size: .9375rem;
            font-weight: bold;
            color: #ffffff;
            left: 9px;
        }

        .form-check-input:checked {
            background: #f2125e;
            border-width: 0;
        }

    .form-check .form-check-label input {
        position: absolute;
        top: 0;
        left: 0;
        margin-left: 0;
        margin-top: 0;
        z-index: 1;
        cursor: pointer;
        opacity: 0;
        filter: alpha(opacity=0);
    }

    .form-check-input:focus {
        border-color: #f2125e !important;
        outline: 0;
        box-shadow: 0 0 0 -0.75rem rgba(13, 110, 253, 0.25);
    }

</style>
<div class="content-wrapper">
    <div class="card">
        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
            <div class="bg-gradient-pinkHeader shadow-primary border-radius-lg pt-3 d-flex justify-content-between row">
                <h2 class="text-white text-capitalize ps-3 title_margin col-md-6"><b>Service Completion</b></h2>
            </div>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("BookingStaffAllocation", "BookingManagement", FormMethod.Post, new { @class = "forms-sample" }))
            {
                @Html.AntiForgeryToken();
                <div class="row form-group">
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <label class="col-form-label">
                            Select Customer
                            @Html.ValidationMessageFor(m => m.BookingId, "", new { @class = "text-danger h3" })
                        </label>

                        <div class="input-group input-group-outline mb-3">
                            @Html.DropDownListFor(m => m.BookingId, new SelectList(Model.BookingHeaderList.GroupBy(header => header.CustomerName).Select(group => group.First()), "BookingId", "CustomerName"), "Select Customer",
                         new Dictionary<string, object>() {
                                           {"id","ddlBookingId"},
                                           { "class","form-control form-select js-example-basic-single w-100"},
                                            {"onchange" ,"javascript:GetDetailData(this.value)" }
                             })
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6 col-sm-6" id="detailCardContainer" style="display:none;">
                        <div class="card2">
                            <div class="card-body2">
                                <h5 class="card-title2">Customer Details</h5>
                                <div id="dragula-left" class="py-2">
                                    <div class="card2 innerCard">
                                        <div class="card-body2 p-3 innerCardBody">
                                            <div class="media">
                                                <i class="typcn typcn-user icon-sm me-3"></i>
                                                <h3 class="mt-1 customer-name"></h3>
                                            </div>
                                            <div class="media">
                                                <i class="typcn typcn-phone icon-sm me-3"></i>
                                                <h5 class="mt-1 contact-number"></h5>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <input type="hidden" id="formData" name="formData" />
            <div class="row mt-5">
                <div class="col-12">
                    <div class="table-responsive">
                        <table id="DetailTable" class="table table-striped">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayName("Action")
                                    </th>
                                    @*<th>
                            @Html.DisplayName("Customer Name")
                        </th>*@
                                    <th>
                                        @Html.DisplayName("Category")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Sub Category")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Appointment Date")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Appointment Time")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Allocated To")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Status")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                    <button id="Completed" class="btn btn-primary mr-2 mt-3 float-end" value="@ViewBag.action">Submit</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function GetDetailData(_BookingHeaderId) {
        $.ajax({
              url: "@System.Configuration.ConfigurationManager.AppSettings["myKey"]" + "/BookingManagement/BookingDetailRTR",
            data: { BookingHeaderId: _BookingHeaderId },
            cache: false,
            type: "POST",
            datatype: "json",
            traditional: true,
            success: function (data) {
                if (data.bhv.length === 0 && data.bdv.length === 0) {
                    // Both data.bhv and data.bdv are null, hide the card and table
                    $('#detailCardContainer').hide();
                    var tableBody = $('#DetailTable tbody');
                    tableBody.empty();
                } else {
                    $('#detailCardContainer').show();
                    $.each(data.bhv, function (index, item) {
                        var customerName = item.CustomerName;
                        var contactNo = item.ContactNo;
                        $('.customer-name').text(customerName);
                        $('.contact-number').text('Contact No: ' + contactNo);
                    })

                    var tableBody = $('#DetailTable tbody');
                    tableBody.empty();
                    $.each(data.bdv, function (index, item) {
                        var row = $('<tr></tr>');
                        if (item.Status == "2") {
                            var BookingDetailCheckbox = $('<div class="form-check"><input type="checkbox" class="form-check-input booking-detail-checkbox" name="BookingDetailsId" value="' + item.BookingDetailId + '" checked disabled><label class="form-check-label"></label></div>');
                        } else {
                            var BookingDetailCheckbox = $('<div class="form-check"><input type="checkbox" class="form-check-input booking-detail-checkbox" name="BookingDetailsId" value="' + item.BookingDetailId + '"><label class="form-check-label"></label></div>');
                        }
                        var BookingIDLabel = $('<label class="form-label text-capitalize bookingid"></label>').text(item.BookingId);

                        var CategoryNameLabel = $('<label class="form-label text-capitalize"></label>').text(item.CategoryName);
                        var SubCategoryNameLabel = $('<label class="form-label text-capitalize sub-category"></label>').text(item.SubCategoryName);
                        var SubCategoryIDLabel = $('<label class="form-label text-capitalize sub-categoryid"></label>').text(item.SubCategoryId);
                        var AppointmentDateLabel = $('<label class="form-label text-capitalize"></label>').text(item.AppointmentDate);
                        var AppointmentTimeLabel = $('<label class="form-label text-capitalize"></label>').text(item.SlotName);
                        //var AllocatedTo = $('<label class="form-label text-capitalize"></label>').text(item.StaffName);
                        var AllocatedTo = $('<label class="form-label text-capitalize allocated-to"></label>').text(item.StaffName).val(item.AllocatedTo);
                        if (item.Status == "1") {
                            var Status = $('<label class="badge badge-warning"></label>').text('Pending');
                        }

                        else if (item.Status == "2"){
                            var Status = $('<label class="badge badge-success"></label>').text('Completed');
                        }
                      
                        var row = $('<tr></tr>').append(
                            $('<td></td>').append(BookingDetailCheckbox),
                            $('<td></td>').append(CategoryNameLabel),
                            $('<td></td>').append(SubCategoryNameLabel),
                            $('<td></td>').append(AppointmentDateLabel),
                            $('<td></td>').append(AppointmentTimeLabel),
                            $('<td></td>').append(AllocatedTo),
                            $('<td></td>').append(Status),
                            $('<td style="display:none;"></td>').append(SubCategoryIDLabel),
                            $('<td style="display:none;"></td>').append(BookingIDLabel)

                        );

                        tableBody.append(row);
                    });
                }
            }
        })
    }
</script>
<script>
    $(document).ready(function () {
    
        $("#Completed").click(function (e) {
            e.preventDefault(); // Prevent default form submission

            var formDataArray = [];

            $('#DetailTable tbody tr').each(function () {
                var row = $(this);
                var bookingDetailCheckbox = row.find('.booking-detail-checkbox');
                var SubCategoryField = row.find('.sub-category');
                var SubCategoryFieldId = row.find('.sub-categoryid');
                var AllocatedToField = row.find('.allocated-to');
                var BookingID = row.find('.bookingid');

                if (bookingDetailCheckbox.is(':checked')) {
                    var bookingDetailId = bookingDetailCheckbox.val();
                    var subCategoryName = SubCategoryField.text();
                    var subCategoryID = SubCategoryFieldId.text();
                    var staffId = AllocatedToField.val(); // StaffId from data-staff-id attribute
                    var bookingid = BookingID.text(); // StaffId from data-staff-id attribute


                    var formDataItem = {
                        BookingDetailId: bookingDetailId,
                        SubCategoryName: subCategoryName,
                        SubCategoryId: subCategoryID,
                        AllocatedTo: staffId,
                        BookingId: bookingid
                    };

                    formDataArray.push(formDataItem);
                }
            });

            

            $.ajax({
                url: "@System.Configuration.ConfigurationManager.AppSettings["myKey"]" + "/BookingManagement/ServiceCompletion",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(formDataArray),
                success: function (data) {
                    SweetAlert(data.Message, data.Type);
                    GetDetailData(data.BId);
                },
                error: function (error) {
                    SweetAlert(error.Message, error.Type);
                }
            });
        });
    });
    function SweetAlert(Message, Type) {
        if (Type == 'success') {
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: Message,
                showConfirmButton: false,
                timer: 3000
            })
        }
        else if (Type == 'error') {
            Swal.fire({
                position: 'top-end',
                icon: 'error',
                title: Message,
                showConfirmButton: false,
                timer: 3000
            })
        }
        else if (Type == 'warning') {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire(
                        'Deleted!',
                        'Your record has been deleted.',
                        'success'
                    )
                }
            })
        }
        else if (Type == 'info') {
            Swal.fire({
                position: 'top-end',
                icon: 'info',
                title: Message,
                showConfirmButton: false,
                timer: 3000
            })
        }
    }
</script>
@model ParulBeautyCareViewModel.ViewModel.StockMgmtViewModel.ProductMasterViewModel
@{
    ViewBag.Title = "Product Master"; 
    ViewBag.Module = "Master";
}
<div class="content-wrapper" style="overflow:unset !important">
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div class="bg-gradient-pinkHeader shadow-primary border-radius-lg pt-3 d-flex justify-content-between row">
                        <h2 class="text-white text-capitalize ps-3 title_margin col-md-6"><b>Create Product</b></h2>
                        @*@if (Convert.ToInt32(TempData["ViewRight"]) == 1)
                            {*@
                        @*<a class="btn btn-light btn-icon mb-2 mx-2 title_a" href="@Url.Action("ViewProductMaster", "Master")">
                                <i class="fa-solid fa-list-check mx-2 text-black"></i><b>View</b>
                            </a>*@
                        <a class="dedcription-btn anc col-md-6" href="@Url.Action("ViewProductMaster","Master")">
                            <span class="name-descripeion"> <b> VIEW RECORDS</b> </span>
                            <div class="btn-icon brain">
                                <i class="fa-solid fa-list-check"> </i>
                            </div>
                        </a>
                        @*}*@
                    </div>
                </div>
                <div class="card-body">
                    @*<div class="row">
                            <div class="d-xl-flex justify-content-between align-items-center">
                                <h1 class="pink"><b>@ViewBag.action Product Master </b></h1>
                                <a class="btn btn-outline-primary btn-round" href="@Url.Action("ViewProductMaster","Master")">
                                    <i class="fa fa-eye mx-2"></i>View Product
                                </a>
                            </div>
                        </div>*@
                    @using (Html.BeginForm("AddProductMaster", "Master", FormMethod.Post, new { @class = "forms-sample", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.Action)
                        @Html.HiddenFor(x => x.ProductId)
                        @Html.HiddenFor(x => x.CreateUser)
                        @Html.HiddenFor(x => x.CreateDate)
                        <div class="row form-group">
                            <div class="col-sm-3">
                                <label for="exampleInputUsername2" class="col-form-label">
                                    Product Code
                                    @Html.ValidationMessageFor(m => m.ProductCode, "", new { @class = "text-danger h3" })
                                </label>

                                @Html.TextBoxFor(m => m.ProductCode, new Dictionary<string, object>() {
                                                                            {"id","txtProductCode"},
                                                                            {"class","form-control text-capitalize"},
                                                                               {"autocomplete","off"},
                                                                            {"required","required"},
                                                                            {"placeholder","Enter Product Code"}
                                                                            })
                            </div>
                            <div class="col-sm-3">
                                <label for="exampleInputUsername2" class="col-form-label">
                                    Product Name
                                    @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger h3" })
                                </label>
                                @Html.TextBoxFor(m => m.ProductName, new Dictionary<string, object>() {
                                                                            {"id","txtProductName"},
                                                                            {"class","form-control text-capitalize"},
                                                                               {"autocomplete","off"},
                                                                            {"required","required"},
                                                                            {"placeholder","Enter Product Name"}
                                                                            })
                            </div>
                            <div class="col-sm-3">
                                <label for="exampleInputUsername2" class="col-form-label">
                                    Number Of Person
                                    @Html.ValidationMessageFor(m => m.NumberOfPerson, "", new { @class = "text-danger h3" })
                                </label>
                                @Html.TextBoxFor(m => m.NumberOfPerson, new Dictionary<string, object>() {
                                                                            {"id","txtNumberOfPerson"},
                                                                            {"class","form-control numberonly"},
                                                                               {"autocomplete","off"},
                                                                            {"required","required"},
                                                                            {"placeholder","Enter Number Of Person"}
                                                                            })
                            </div>
                            <div class="col-sm-3">
                                <label for="exampleInputUsername2" class="col-form-label">
                                    Product Type
                                    @Html.ValidationMessageFor(m => m.ProductTypeId, "", new { @class = "text-danger h3" })
                                </label>
                                @Html.DropDownListFor(model => model.ProductTypeId, new SelectList(Model.ProductTypeMasterList, "ProductTypeId", "ProductTName"), "Select ProductType", new Dictionary<string, object>
                                          () {
                                          {"id","ddlProductType"},
                                          { "class","js-example-basic-single  w-100"},
                                          {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter ProductType"}
                                           })
                            </div>
                        </div>
                        <div class="row form-group">

                            <div class="col-sm-3">
                                <label for="exampleInputPassword2" class="col-form-label">IsActive</label>
                                <div class="input-group input-group-outline mb-3">
                                    @Html.DropDownListFor(x => x.IsActive, new List<SelectListItem>
                                           {
                                               new SelectListItem{ Text="Enable", Value = "true",Selected=true },
                                               new SelectListItem{ Text="Disable", Value = "false" }
                                            }, new { @class = "js-example-basic-single  w-100", @id = "IsActive" })
                                </div>
                            </div>
                            @*<div class="col-lg-4 grid-margin stretch-card">
                                    <div class="card">
                                        <div class="card-body">
                                            <h4 class="card-title d-flex">
                                                Product Image
                                            </h4>
                                            <input type="file" name="ProductImage" class="dropify" />
                                        </div>
                                    </div>
                                </div>*@

                            <div class="col-lg-4 grid-margin stretch-card">
                                <div class="card">
                                    <div class="card-body">
                                        <h4 class="card-title d-flex">
                                            Product Image
                                        </h4>
                                        @if (Model.Action == "Update")
                                        {
                                            @Html.HiddenFor(m => m.ProductImage)
                                            <input type="file" data-default-file="../../@Model.ProductImage" name="ProductImage" class="dropify" />
                                        }
                                        else
                                        {
                                            <input type="file" name="ProductImage" class="dropify" />
                                        }


                                    </div>
                                </div>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary mr-2 mt-3" value="@ViewBag.action" onclick="return formSubmit('Are You sure you want to save data?')">Submit</button>

                    }
                </div>
            </div>
        </div>
    </div>
</div>

@*<script>
    // Get the HTML element with the class "dropify-render"
    var dropifyRenderElement = document.querySelector('.dropify-render');

    if (dropifyRenderElement) {
        // Create an <img> element
        var imgElement = document.createElement('img');

        // Set the src attribute of the <img> element
        imgElement.src = "image_path_here"; // Replace "image_path_here" with your actual image path

        // Append the <img> element to the "dropify-render" element
        dropifyRenderElement.appendChild(imgElement);
    }
</script>*@
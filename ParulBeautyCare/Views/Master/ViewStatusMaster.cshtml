@model IEnumerable<ParulBeautyCareDbClasses.DataModels.PBStatusMasterRetrieve_Result>
@{
    ViewBag.Title = "Status Master";
    ViewBag.Module = "Master";
}
@*<style>
    .switch {
        --line: #505162;
        --dot: #f2125e;
        --circle: #9ea0be;
        --duration: 0.3s;
        --text: #9ea0be;
        cursor: pointer;
    }

        .switch input {
            display: none;
        }

            .switch input + div {
                position: relative;
            }

                .switch input + div:before, .switch input + div:after {
                    --s: 1;
                    content: '';
                    position: absolute;
                    height: 4px;
                    top: 10px;
                    width: 24px;
                    background: var(--line);
                    transform: scaleX(var(--s));
                    transition: transform var(--duration) ease;
                }

                .switch input + div:before {
                    --s: 0;
                    left: 0;
                    transform-origin: 0 50%;
                    border-radius: 2px 0 0 2px;
                }

                .switch input + div:after {
                    left: 28px;
                    transform-origin: 100% 50%;
                    border-radius: 0 2px 2px 0;
                }

                .switch input + div span {
                    padding-left: 56px;
                    line-height: 24px;
                    color: var(--text);
                }

                    .switch input + div span:before {
                        --x: 0;
                        --b: #f2125e;
                        --s: 4px;
                        content: '';
                        position: absolute;
                        left: 0;
                        top: 0;
                        width: 24px;
                        height: 24px;
                        border-radius: 50%;
                        box-shadow: inset 0 0 0 var(--s) var(--b);
                        transform: translateX(var(--x));
                        transition: box-shadow var(--duration) ease, transform var(--duration) ease;
                    }

                    .switch input + div span:not(:empty) {
                        padding-left: 64px;
                    }

            .switch input:checked + div:before {
                --s: 1;
            }

            .switch input:checked + div:after {
                --s: 0;
            }

            .switch input:checked + div span:before {
                --x: 28px;
                --s: 12px;
                --b: var(--dot);
            }
</style>*@

<div class="content-wrapper">
    <div class="card">
        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
            <div class="bg-gradient-pinkHeader shadow-primary border-radius-lg pt-4 d-flex justify-content-between">
                <h2 class="text-white text-capitalize ps-3 title_margin"><b>Status Master</b></h2>
                @if (Convert.ToInt32(TempData["InsertRight"]) == 1)
                {
                    <a class="btn btn-light btn-rounded btn-icon mb-2 mx-2 title_a" href="@Url.Action("AddStatusMaster", "Master")">
                        <i class="fa fa-plus mx-2 text-black"></i>
                    </a>
                }
                </div>
        </div>
        <div class="card-body">
            @*<h1 class="pink"><b>STAFF MANAGEMENT </b></h1>*@
            @*<div class="row">
                <div class="d-xl-flex justify-content-between align-items-center">
                    <h1 class="pink"><b>Status Master </b></h1>
                    <a class="btn btn-sm btn-outline-primary btn-round mb-3" href="@Url.Action("AddStatusMaster","Master")">
                        <i class="fa fa-plus mx-2 "></i>Add
                    </a>
                </div>
            </div>*@
            <div class="row">
                <div class="col-12">
                    <div class="table-responsive">
                        <table id="base-style" class="table table-striped">
                            <thead>
                                <tr>
                                    @*<th>
                                        @Html.DisplayName("Action")
                                    </th>*@
                                    <th>
                                        @Html.DisplayName("Status Name")
                                    </th>
                                    <th>
                                        @Html.DisplayName("IsActive")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Create Date")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Create User")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Convert.ToInt32(TempData["ViewRight"]) == 1)
                                { 
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            @*<td>
                        @if (ViewBag.UpdateRight == 1)
                        {
                            @Html.ActionLink(" ", "EditStatusMaster", new { id = item.StatusId }, new { @class = " btn editbtn fa fa-pencil-square-o", title = "Edit" })
                        }
                    </td>*@
                                            <td>
                                                @Html.DisplayFor(modelItem => item.StatusName)
                                            </td>
                                            <td>
                                                @*<label class="toggle">
            <input class="toggle-checkbox" type="checkbox" onclick='ActiveDeactiveStatusChange(this,"@item.StatusId","StatusMaster")' @(item.IsActive == true ? "checked" : "")>
            <span class="toggle-switch"></span>
        </label>*@
                                                @*<label class="switch">
            <input type="checkbox" onclick='ActiveDeactiveStatusChange(this,"@item.StatusId","StatusMaster")' @(item.IsActive == true ? "checked" : "")>
            <div>
                <span></span>
            </div>
        </label>*@
                                                @if (Convert.ToInt32(TempData["UpdateRight"]) == 1)
                                                {
                                                    <div class="button r" id="button-2">
                                                        <input type="checkbox" class="checkbox" onclick='ActiveDeactiveStatusChange(this,"@item.StatusId","StatusMaster")' @(item.IsActive == true ? "checked" : "")>
                                                        <div class="knobs"></div>
                                                        <div class="layer"></div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="button r" id="button-2">
                                                        <input type="checkbox" class="checkbox" disabled="disabled" onclick='ActiveDeactiveStatusChange(this,"@item.StatusId","StatusMaster")' @(item.IsActive == true ? "checked" : "")>
                                                        <div class="knobs"></div>
                                                        <div class="layer"></div>
                                                    </div>
                                                }
                                            </td>
                                            <td> @Html.DisplayFor(modelItem => item.CreateDate)</td>
                                            <td> @Html.DisplayFor(modelItem => item.CreateUser)</td>
                                        </tr>
                                    }
                                }
            else
            {
                    <tr>
                        <td>You have no rights to view data</td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
            }
                                </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@model ParulBeautyCareViewModel.ViewModel.StockMgmtViewModel.StockPurchaseViewModel
@{
    ViewBag.Title = "Stock Purchase";
    ViewBag.Module = "Stock Management";
}

<div class="content-wrapper">
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="card">
                @*<div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
            <div class="bg-gradient-pinkHeader shadow-primary border-radius-lg pt-4 pb-3">
                <h2 class="text-white text-capitalize ps-3"><b>STOCK PURCHASE </b></h2>
            </div>
        </div>*@
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div class="bg-gradient-pinkHeader shadow-primary border-radius-lg pt-4 d-flex justify-content-between">
                        <h2 class="text-white text-capitalize ps-3 title_margin"><b>STOCK PURCHASE</b></h2>
                        <a class="btn btn-light btn-icon mb-2 mx-2 title_a" href="@Url.Action("ViewStockPurchase","StockManagement")">
                            <i class="fa-solid fa-list-check mx-2 text-black"></i><b>View</b>
                        </a>

                    </div>
                </div>
                <div class="card-body">
                    @*<div class="row">
                        <div class="d-xl-flex justify-content-end align-items-end">
                            <a class="btn btn-sm btn-outline-primary btn-round mb-3" href="@Url.Action("ViewStockPurchase","StockManagement")">
                                <i class="fa fa-eye mx-2"></i>View
                            </a>
                        </div>
                    </div>*@
                    @using (Html.BeginForm("AddStockPurchase", "StockManagement", FormMethod.Post, new { @class = "forms-sample" }))
                    {
                        @Html.AntiForgeryToken();
                        @Html.HiddenFor(m => m.PurchaseId)
                        @Html.HiddenFor(m => m.ProductTypeId)
                        @Html.HiddenFor(m => m.CreateUser)
                        @Html.HiddenFor(m => m.CreateDate)
                        <div class="row form-group">
                            <div class="col-sm-3">
                                <label class="col-form-label">
                                    Select Department
                                    @Html.ValidationMessageFor(m => m.DepartmentId, "", new { @class = "text-danger h3" })
                                </label>

                                <div class="input-group input-group-outline mb-3">
                                    @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.DeptList, "DepartmentId", "DepartmentName"), "Select Department",
                                        new Dictionary<string, object>() {
                                                   {"id","ddlDeptId"},
                                                   { "class","form-control form-select js-example-basic-single w-100"}
                                            })
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label class="col-form-label">
                                    Select Product
                                    @Html.ValidationMessageFor(m => m.ProductId, "", new { @class = "text-danger h3" })
                                </label>

                                <div class="input-group input-group-outline mb-3">
                                    @Html.DropDownListFor(m => m.ProductId, new SelectList(Model.ProductList, "ProductId", "ProductName"), "Select Product",
                                        new Dictionary<string, object>() {
                                                   {"id","ddlProdId"},
                                                   { "class","form-control form-select js-example-basic-single w-100"}
                                            })
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label class="col-form-label">Purchase Date  @Html.ValidationMessageFor(m => m.PurchaseDate, "", new { @class = "text-danger h3" })</label>
                                @Html.TextBoxFor(model => model.PurchaseDate, new { @class = "form-control dateflat", id = "PurchaseDate", placeholder = "Purchase Date", required = "required" })
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">Manufacturing Date @Html.ValidationMessageFor(m => m.MfgDate, "", new { @class = "text-danger h3" })</label>

                                @Html.TextBoxFor(model => model.MfgDate, new { @class = "form-control rangeDates", id = "MfgDate", placeholder = "Manufacturing Date", required = "required" })
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">Expiry Date @Html.ValidationMessageFor(m => m.ExpDate, "", new { @class = "text-danger h3" })</label>

                                @Html.TextBoxFor(model => model.ExpDate, new { @class = "form-control rangeDates", id = "ExpDate", placeholder = "Expiry Date", required = "required" })
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">Quantity @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger h3" })</label>

                                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control numberonly", id = "Quantity", placeholder = "Enter Quantity", required = "required" })
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">Vendor @Html.ValidationMessageFor(m => m.Vendor, "", new { @class = "text-danger h3" })</label>
                                @Html.TextBoxFor(model => model.Vendor, new { @class = "form-control", id = "Vender", placeholder = "Enter Vender", required = "required" })
                            </div>
                        </div>
                        @*<button type="submit" class="btn btn-primary mr-2 mt-3" onclick="return confirm('Are You sure you want to save data?')">Submit</button>*@
                        <button type="submit" class="btn btn-primary mr-2 mt-3" onclick="return formSubmit('Are You sure you want to save data?')">Submit</button>

                    }

                </div>
            </div>
        </div>
    </div>
</div>
